/*
playUnlockAnim@24502 - count lores

fn <none>@24509 (enum<String>) -> ui.Window (10 regs, 22 ops)
Appear on:
55 48 8B ?? 48 83 ?? ?? 48 89 ?? ?? 48 8B ?? ?? 48 89 ?? ?? 48 85 ?? 0F ?? ?? ?? ?? ?? 48 8B ?? ?? 48 89 ?? ?? 48 85 ?? 75 ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 8B ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 89 ?? ?? E9 ?? ?? ?? ?? 48 33 ?? 48 89 ?? ?? 48 B9 ?? ?? ?? ?? ?? ?? ?? ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 89 ?? ?? 48 B9 ?? ?? ?? ?? ?? ?? ?? ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 89 ?? ?? 4C ?? ?? ?? 4D ?? ?? ?? 4C ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 75 ?? 49 ?? ?? ?? ?? ?? ?? ?? ?? ?? 48 BA ?? ?? ?? ?? ?? ?? ?? ?? 48 8B ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? EB ?? 4C ?? ?? ?? 4D ?? ?? 48 8B ?? ?? 48 8B ?? ?? 48 85 ?? 75 ?? 4C ?? ?? ?? 49 ?? ?? ?? ?? ?? ?? ?? ?? ?? 48 BA ?? ?? ?? ?? ?? ?? ?? ?? 48 8B ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? EB ?? 48 8B ?? ?? 48 89 ?? 4C ?? ?? ?? 4D ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 74 ?? 4D ?? ?? ?? EB ?? 4D ?? ?? 44 ?? ?? ?? 4D ?? ?? ?? 4C ?? ?? ?? 48 8B ?? ?? 48 8B ?? ?? 4D ?? ?? 45 ?? ?? 4D ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 4C ?? ?? ?? 49 ?? ?? ?? 48 89 ?? ?? 48 85 ?? 0F ?? ?? ?? ?? ?? 49 ?? ?? ?? 48 89 ?? ?? 48 85 ?? 75 ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 8B ?? ?? 85 ?? 75 ?? 48 8B ?? ?? 4C ?? ?? ?? 48 83 ?? ?? 41 ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? EB ?? 48 8B ?? ?? 48 8B ?? ?? 4C ?? ?? ?? 48 83 ?? ?? 41 ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3

fn remove@24527 (ui.win.tech.TechTree) -> void (4 regs, 10 ops)
Disappear on:
55 48 8B ?? 48 83 ?? ?? 48 89 ?? ?? 48 33 ?? 8A ?? ?? ?? ?? ?? 88 ?? ?? 48 84 ?? 0F ?? ?? ?? ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3 48 8B ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 0F ?? ?? ?? ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 75 ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 49 ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3 90 55 48 8B ?? 48 83 ?? ?? 48 89 ?? ?? 48 89 ?? ?? 4C ?? ?? ?? B8 ?? ?? ?? ?? 88 ?? ?? 88 ?? ?? ?? ?? ?? 48 89 ?? ?? ?? ?? ?? 48 85 ?? 75 ?? 48 83 ?? ?? 68 ?? ?? ?? ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4C ?? ?? ?? ?? ?? ?? 48 8B ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 88 ?? ?? 48 84 ?? 0F ?? ?? ?? ?? ?? 48 8B ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 48 8B ?? ?? 4C ?? ?? ?? ?? ?? ?? 48 33 ?? 48 89 ?? ?? 48 8B ?? 48 8B ?? ?? 4C ?? ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3

*/

use crate::commands::aob_injection::AobInjection;
use crate::commands::mem_alloc::*;
use crate::commands::hashlink::*;
use crate::commands::basic::*;
use crate::utils::signals::*;
use std::error::Error;
use std::sync::Mutex;
use windows::Win32::System::Memory::{PAGE_EXECUTE, PAGE_EXECUTE_READ, PAGE_EXECUTE_READWRITE};


pub struct LoreHook {
    pid: u32,

    // fn playUnlockAnim@24502
    address_playunlockanim: usize,
    // fn <none>@24509
    address_none_appear: usize,
    // fn remove@24527
    address_remove: usize,

    // When Lore window is shown
    pub signal_show: Signal,
    // When Lore window is hidden
    pub signal_hide: Signal,
    // When new Lore is unlocked
    pub signal_lore_unlocked: Signal,

    injection_playunlockanim: Mutex<Option<AobInjection>>,
    injection_none_appear: Mutex<Option<AobInjection>>,
    injection_remove: Mutex<Option<AobInjection>>,
    mem_allocator: MemoryAllocator,
}


impl LoreHook {
    pub fn new(pid: u32) -> Result<Self, Box<dyn Error>> {
        let memory_allocator = MemoryAllocator::new(pid, 0x1000)?;
        
        let mut lore_hook = Self {
            pid,
            address_playunlockanim: 0,
            address_none_appear: 0,
            address_remove: 0,
            signal_show: Signal::new(),
            signal_hide: Signal::new(),
            signal_lore_unlocked: Signal::new(),
            injection_playunlockanim: Mutex::new(None),
            injection_none_appear: Mutex::new(None),
            injection_remove: Mutex::new(None),
            mem_allocator: memory_allocator,
        };

        lore_hook.init_lore_hook()?;
        Ok(lore_hook)
    }

    pub fn init_lore_hook(&mut self) -> Result<(), Box<dyn Error>> {
        // fn <none>@24509
        let hex_pattern_none_appear = "55 48 8B ?? 48 83 ?? ?? 48 89 ?? ?? 48 8B ?? ?? 48 89 ?? ?? 48 85 ?? 0F ?? ?? ?? ?? ?? 48 8B ?? ?? 48 89 ?? ?? 48 85 ?? 75 ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 8B ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 89 ?? ?? E9 ?? ?? ?? ?? 48 33 ?? 48 89 ?? ?? 48 B9 ?? ?? ?? ?? ?? ?? ?? ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 89 ?? ?? 48 B9 ?? ?? ?? ?? ?? ?? ?? ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 89 ?? ?? 4C ?? ?? ?? 4D ?? ?? ?? 4C ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 75 ?? 49 ?? ?? ?? ?? ?? ?? ?? ?? ?? 48 BA ?? ?? ?? ?? ?? ?? ?? ?? 48 8B ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? EB ?? 4C ?? ?? ?? 4D ?? ?? 48 8B ?? ?? 48 8B ?? ?? 48 85 ?? 75 ?? 4C ?? ?? ?? 49 ?? ?? ?? ?? ?? ?? ?? ?? ?? 48 BA ?? ?? ?? ?? ?? ?? ?? ?? 48 8B ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 48 83 ?? ?? EB ?? 48 8B ?? ?? 48 89 ?? 4C ?? ?? ?? 4D ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 74 ?? 4D ?? ?? ?? EB ?? 4D ?? ?? 44 ?? ?? ?? 4D ?? ?? ?? 4C ?? ?? ?? 48 8B ?? ?? 48 8B ?? ?? 4D ?? ?? 45 ?? ?? 4D ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 4C ?? ?? ?? 49 ?? ?? ?? 48 89 ?? ?? 48 85 ?? 0F ?? ?? ?? ?? ?? 49 ?? ?? ?? 48 89 ?? ?? 48 85 ?? 75 ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 8B ?? ?? 85 ?? 75 ?? 48 8B ?? ?? 4C ?? ?? ?? 48 83 ?? ?? 41 ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? EB ?? 48 8B ?? ?? 48 8B ?? ?? 4C ?? ?? ?? 48 83 ?? ?? 41 ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3";

        // fn remove@24527
        let hex_pattern_remove = "55 48 8B ?? 48 83 ?? ?? 48 89 ?? ?? 48 33 ?? 8A ?? ?? ?? ?? ?? 88 ?? ?? 48 84 ?? 0F ?? ?? ?? ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3 48 8B ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 0F ?? ?? ?? ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? 75 ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 49 ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3 90 55 48 8B ?? 48 83 ?? ?? 48 89 ?? ?? 48 89 ?? ?? 4C ?? ?? ?? B8 ?? ?? ?? ?? 88 ?? ?? 88 ?? ?? ?? ?? ?? 48 89 ?? ?? ?? ?? ?? 48 85 ?? 75 ?? 48 83 ?? ?? 68 ?? ?? ?? ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? 48 83 ?? ?? FF ?? 48 89 ?? ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4C ?? ?? ?? ?? ?? ?? 48 8B ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 88 ?? ?? 48 84 ?? 0F ?? ?? ?? ?? ?? 48 8B ?? ?? 4C ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 4D ?? ?? ?? ?? ?? ?? 4C ?? ?? ?? 48 8B ?? ?? 4C ?? ?? ?? ?? ?? ?? 48 33 ?? 48 89 ?? ?? 48 8B ?? 48 8B ?? ?? 4C ?? ?? ?? 48 83 ?? ?? E8 ?? ?? ?? ?? 48 89 ?? ?? ?? 48 83 ?? ?? 48 8B ?? ?? 48 83 ?? ?? 5D 48 C3";

        let executable_protection = PAGE_EXECUTE.0 | PAGE_EXECUTE_READ.0 | PAGE_EXECUTE_READWRITE.0;
        let mut addrs = aob_scan_mrprotect(self.pid, hex_pattern_none_appear, executable_protection)?;
        if addrs.is_empty() {
            tracing::error!("Pattern not found: init_lore_hook: hex_pattern_none_appear");
            return Err("Pattern not found: init_lore_hook: hex_pattern_none_appear".into());
        }
        self.address_none_appear = addrs[0];

        addrs = aob_scan_mrprotect(self.pid, hex_pattern_remove, executable_protection)?;
        if addrs.is_empty() {
            tracing::error!("Pattern not found: init_lore_hook: hex_pattern_remove");
            return Err("Pattern not found: init_lore_hook: hex_pattern_remove".into());
        }
        self.address_remove = addrs[0];

        let guard = Hashlink::instance(self.pid).lock().unwrap();
        if let Some(hashlink) = guard.as_ref() {
            self.address_playunlockanim = hashlink.get_function_address("playUnlockAnim", Some(0))?;
        } else {
            return Err("Hashlink not initialized".into());
        }

        Ok(())
    }

    
}


